// Generated by LiveScript 1.2.0
(function(){
  var TestRobot1, tr;
  importScripts('../base-robot.js');
  TestRobot1 = (function(superclass){
    var prototype = extend$((import$(TestRobot1, superclass).displayName = 'TestRobot1', TestRobot1), superclass).prototype, constructor = TestRobot1;
    prototype.onIdle = function(){
      if (this.myVarEnemy) {
        if (this.me.angle + this.me.angle_turret % 360 > this.myVarEnemy[0].angle) {
          this.turn_turret_left(70);
        } else {
          this.turn_turret_right(70);
        }
      } else {
        this.turn_turret_left(35);
        this.turn_left(35);
        this.move_forwards(Math.random() * 200);
      }
      return this.myVarEnemy = undefined;
    };
    prototype.onWallCollide = function(){
      this.move_opposide(10);
      return this.turn_left(90);
    };
    prototype.onHit = function(){
      this.move_forwards(40);
      this.turn_left(40);
      this.move_forwards(40);
      return this.turn_right(40);
    };
    prototype.onEnemySpot = function(){
      this.myVarEnemy = this.enemySpot;
      return this.shoot();
    };
    function TestRobot1(){
      TestRobot1.superclass.apply(this, arguments);
    }
    return TestRobot1;
  }(BaseRobot));
  tr = new TestRobot1("My first test robot");
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
