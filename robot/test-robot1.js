// Generated by LiveScript 1.2.0
(function(){
  var TestRobot1, tr;
  importScripts('../base-robot.js');
  TestRobot1 = (function(superclass){
    var prototype = extend$((import$(TestRobot1, superclass).displayName = 'TestRobot1', TestRobot1), superclass).prototype, constructor = TestRobot1;
    prototype.onIdle = function(){
      var turnVal;
      this.turn_turret_left(90);
      this.move_forwards(Math.random() * 200);
      turnVal = Math.random() * 30;
      if (Math.random() > 0.5) {
        return this.turn_left(turnVal);
      } else {
        return this.turn_right(turnVal);
      }
    };
    prototype.onWallCollide = function(){
      this.move_opposide(10);
      return this.turn_left(90);
    };
    prototype.onHit = function(){
      var i$, x, results$ = [];
      for (i$ = 20; i$ <= 25; ++i$) {
        x = i$;
        this.move_backwards(x);
        this.turn_left(x);
        results$.push(this.shoot());
      }
      return results$;
    };
    prototype.onEnemySpot = function(){
      return this.shoot();
    };
    function TestRobot1(){
      TestRobot1.superclass.apply(this, arguments);
    }
    return TestRobot1;
  }(BaseRobot));
  tr = new TestRobot1("My first test robot");
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
